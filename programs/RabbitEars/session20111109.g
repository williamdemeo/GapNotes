gap> G:=TransitiveGroup(12,2);
E(4)[x]C(3)=6x2
gap> for b in AllBlocks(G) do Print(Orbit(G,b,OnSets), "\n"); od;
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
gap> OverAlgebraDemo(3);

 The congruences of the group, C2 x A4, are:
[ [ 1, 2 ], [ 5, 6 ], [ 9, 10 ], [ 3, 4 ], [ 7, 8 ], [ 11, 12 ] ]
[ [ 1, 2, 3, 4 ], [ 5, 6, 7, 8 ], [ 9, 10, 11, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3 ], [ 2, 4 ], [ 6, 7 ], [ 5, 8 ], [ 9, 12 ], [ 10, 11 ] ]
[ [ 1, 4 ], [ 2, 3 ], [ 6, 8 ], [ 5, 7 ], [ 9, 11 ], [ 10, 12 ] ]
OverAlgebra called with the following arguments: 
args[1] = Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 1, 6, 9)( 2, 5,10)( 3, 7,12)( 4, 8,11), ( 1, 4)( 2, 3)( 5, 7)( 6, 8)( 9,11)
    (10,12) ] )
args[2] = [ 1, 4 ]
args[3] = C2xA4
uacalc file: ./OverAlgebra-C2xA4-0-3.ua
axes = [ 1, 4 ]
B0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
B1 = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
B2 = [ 24, 25, 26, 4, 27, 28, 29, 30, 31, 32, 33, 34 ]
p0[1] = ( 2,13)( 3,14)( 4,15)( 5,16)( 6,17)( 7,18)( 8,19)( 9,20)(10,21)(11,22)(12,23)
p0[2] = ( 1,24)( 2,25)( 3,26)( 5,27)( 6,28)( 7,29)( 8,30)( 9,31)(10,32)(11,33)(12,34)
s = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 ]
gap> Read("OverAlgebras.g");
gap> OverAlgebraDemo(4);

 The congruences of the group, C2 x A4, are:
[ [ 1, 2 ], [ 5, 6 ], [ 9, 10 ], [ 3, 4 ], [ 7, 8 ], [ 11, 12 ] ]
[ [ 1, 2, 3, 4 ], [ 5, 6, 7, 8 ], [ 9, 10, 11, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3 ], [ 2, 4 ], [ 6, 7 ], [ 5, 8 ], [ 9, 12 ], [ 10, 11 ] ]
[ [ 1, 4 ], [ 2, 3 ], [ 6, 8 ], [ 5, 7 ], [ 9, 11 ], [ 10, 12 ] ]
OverAlgebra called with the following arguments: 
args[1] = Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 1, 6, 9)( 2, 5,10)( 3, 7,12)( 4, 8,11), ( 1, 4)( 2, 3)( 5, 7)( 6, 8)( 9,11)
    (10,12) ] )
args[2] = [ 1, 5 ]
args[3] = C2xA4
uacalc file: ./OverAlgebra-C2xA4-0-4.ua
axes = [ 1, 5 ]
B0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
B1 = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
B2 = [ 24, 25, 26, 27, 5, 28, 29, 30, 31, 32, 33, 34 ]
p0[1] = ( 2,13)( 3,14)( 4,15)( 5,16)( 6,17)( 7,18)( 8,19)( 9,20)(10,21)(11,22)(12,23)
p0[2] = ( 1,24)( 2,25)( 3,26)( 4,27)( 6,28)( 7,29)( 8,30)( 9,31)(10,32)(11,33)(12,34)
s = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 ]
gap> Read("OverAlgebras.g");
gap> OverAlgebraDemo(3);

 The congruences of the group, C2 x A4, are:
[ [ 1, 2 ], [ 5, 6 ], [ 9, 10 ], [ 3, 4 ], [ 7, 8 ], [ 11, 12 ] ]
[ [ 1, 2, 3, 4 ], [ 5, 6, 7, 8 ], [ 9, 10, 11, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3 ], [ 2, 4 ], [ 6, 7 ], [ 5, 8 ], [ 9, 12 ], [ 10, 11 ] ]
[ [ 1, 4 ], [ 2, 3 ], [ 6, 8 ], [ 5, 7 ], [ 9, 11 ], [ 10, 12 ] ]
OverAlgebra called with the following arguments: 
args[1] = Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 1, 6, 9)( 2, 5,10)( 3, 7,12)( 4, 8,11), ( 1, 4)( 2, 3)( 5, 7)( 6, 8)( 9,11)
    (10,12) ] )
args[2] = [ 1, 3 ]
args[3] = C2xA4
uacalc file: ./OverAlgebra-C2xA4-0-2.ua
axes = [ 1, 3 ]
B0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
B1 = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
B2 = [ 24, 25, 3, 26, 27, 28, 29, 30, 31, 32, 33, 34 ]
p0[1] = ( 2,13)( 3,14)( 4,15)( 5,16)( 6,17)( 7,18)( 8,19)( 9,20)(10,21)(11,22)(12,23)
p0[2] = ( 1,24)( 2,25)( 4,26)( 5,27)( 6,28)( 7,29)( 8,30)( 9,31)(10,32)(11,33)(12,34)
s = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ]
gap> Read("TIKI3.g");
gap> G;
E(4)[x]C(3)=6x2
gap> Read("REX.g");
gap> REXDemo(1);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 3 ]
args[3] = 1
args[4] = S3
AppendList: <list2> must be a small list (not a integer) at
Append( res, arg[i] );
 called from
Concatenation( "REX-", algebraname ) called from
REX( [ G, Gens, M, name ] ); called from
<function>( <arguments> ) called from read-eval-loop
Entering break read-eval-print loop ...
you can 'quit;' to quit to outer loop, or
you can replace <list2> via 'return <list2>;' to continue
brk> quit;
gap> REXDemo(1);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 3 ]
args[3] = 1
args[4] = S3
AppendList: <list2> must be a small list (not a integer) at
Append( res, arg[i] );
 called from
Concatenation( "REX-", algebraname ) called from
REX( [ G, Gens, M, name ] ); called from
<function>( <arguments> ) called from read-eval-loop
Entering break read-eval-print loop ...
you can 'quit;' to quit to outer loop, or
you can replace <list2> via 'return <list2>;' to continue
brk> quit;
gap> Read("REX.g");
gap> REXDemo(1);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 3 ]
args[3] = 1
args[4] = S3
AppendList: <list2> must be a small list (not a integer) at
Append( res, arg[i] );
 called from
Concatenation( "REX-", algebraname ) called from
REX( [ G, Gens, M, name ] ); called from
<function>( <arguments> ) called from read-eval-loop
Entering break read-eval-print loop ...
you can 'quit;' to quit to outer loop, or
you can replace <list2> via 'return <list2>;' to continue
brk> quit;
gap> Read("REX.g");
gap> REXDemo(1);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 3 ]
args[3] = 1
args[4] = S3
uacalc file: ./REX-S3-0-2.ua
axes = [ 1, 3 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
B1 = [ 1, 7, 8, 9, 10, 11 ]
B2 = [ 12, 13, 3, 14, 15, 16 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 4,14)( 5,15)( 6,16)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3 ]
gap> REXDemo(2);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 3 ]
args[3] = 2
args[4] = S3
uacalc file: ./REX-S3-0-2-M2.ua
axes = [ 1, 3 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
B1 = [ 1, 7, 8, 9, 10, 11 ]
B2 = [ 12, 13, 3, 14, 15, 16 ]
B3 = [ 1, 17, 18, 19, 20, 21 ]
B4 = [ 22, 23, 3, 24, 25, 26 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 4,14)( 5,15)( 6,16)
p0[3] = ( 2,17)( 3,18)( 4,19)( 5,20)( 6,21)
p0[4] = ( 1,22)( 2,23)( 4,24)( 5,25)( 6,26)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 ]
s[2] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3 ]
gap> REXDemo(3);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 3 ]
args[3] = 3
args[4] = S3
uacalc file: ./REX-S3-0-2-M3.ua
axes = [ 1, 3 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
B1 = [ 1, 7, 8, 9, 10, 11 ]
B2 = [ 12, 13, 3, 14, 15, 16 ]
B3 = [ 1, 17, 18, 19, 20, 21 ]
B4 = [ 22, 23, 3, 24, 25, 26 ]
B5 = [ 1, 27, 28, 29, 30, 31 ]
B6 = [ 32, 33, 3, 34, 35, 36 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 4,14)( 5,15)( 6,16)
p0[3] = ( 2,17)( 3,18)( 4,19)( 5,20)( 6,21)
p0[4] = ( 1,22)( 2,23)( 4,24)( 5,25)( 6,26)
p0[5] = ( 2,27)( 3,28)( 4,29)( 5,30)( 6,31)
p0[6] = ( 1,32)( 2,33)( 4,34)( 5,35)( 6,36)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
  34, 35, 36 ]
s[2] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 27, 28, 29, 30, 31, 32, 33, 34, 
  35, 36 ]
s[3] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 1, 1, 1, 1, 3, 3, 3, 
  3, 3 ]
gap> Read("REX.g");
gap> REXDemo(4);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 3 ]
args[3] = 4
args[4] = S3
uacalc file: ./REX-S3-0-2-M4.ua
axes = [ 1, 3 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
B1 = [ 1, 7, 8, 9, 10, 11 ]
B2 = [ 12, 13, 3, 14, 15, 16 ]
B3 = [ 1, 17, 18, 19, 20, 21 ]
B4 = [ 22, 23, 3, 24, 25, 26 ]
B5 = [ 1, 27, 28, 29, 30, 31 ]
B6 = [ 32, 33, 3, 34, 35, 36 ]
B7 = [ 1, 37, 38, 39, 40, 41 ]
B8 = [ 42, 43, 3, 44, 45, 46 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 4,14)( 5,15)( 6,16)
p0[3] = ( 2,17)( 3,18)( 4,19)( 5,20)( 6,21)
p0[4] = ( 1,22)( 2,23)( 4,24)( 5,25)( 6,26)
p0[5] = ( 2,27)( 3,28)( 4,29)( 5,30)( 6,31)
p0[6] = ( 1,32)( 2,33)( 4,34)( 5,35)( 6,36)
p0[7] = ( 2,37)( 3,38)( 4,39)( 5,40)( 6,41)
p0[8] = ( 1,42)( 2,43)( 4,44)( 5,45)( 6,46)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
  34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 ]
s[2] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 27, 28, 29, 30, 31, 32, 33, 34, 
  35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 ]
s[3] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 1, 1, 1, 1, 3, 3, 3, 
  3, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 ]
s[4] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
  33, 34, 35, 36, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3 ]
gap> REXDemo(5);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 4 ]
args[3] = 1
args[4] = S3
uacalc file: ./REX-S3-0-3.ua
axes = [ 1, 4 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
B1 = [ 1, 7, 8, 9, 10, 11 ]
B2 = [ 12, 13, 14, 4, 15, 16 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 3,14)( 5,15)( 6,16)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4 ]
gap> REXDemo(6);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 4 ]
args[3] = 2
args[4] = S3
uacalc file: ./REX-S3-0-3-M2.ua
axes = [ 1, 4 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
B1 = [ 1, 7, 8, 9, 10, 11 ]
B2 = [ 12, 13, 14, 4, 15, 16 ]
B3 = [ 1, 17, 18, 19, 20, 21 ]
B4 = [ 22, 23, 24, 4, 25, 26 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 3,14)( 5,15)( 6,16)
p0[3] = ( 2,17)( 3,18)( 4,19)( 5,20)( 6,21)
p0[4] = ( 1,22)( 2,23)( 3,24)( 5,25)( 6,26)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 ]
s[2] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4 ]
gap> Read("REX.g");
gap> REXDemo(5);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 3, 4, 6 ]
args[3] = 1
args[4] = S3
uacalc file: ./REX-S3-0-2-3-5.ua
axes = [ 1, 3, 4, 6 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
B1 = [ 1, 7, 8, 9, 10, 11 ]
B2 = [ 12, 13, 3, 14, 15, 16 ]
B3 = [ 17, 18, 19, 4, 20, 21 ]
B4 = [ 22, 23, 24, 25, 26, 6 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 4,14)( 5,15)( 6,16)
p0[3] = ( 1,17)( 2,18)( 3,19)( 5,20)( 6,21)
p0[4] = ( 1,22)( 2,23)( 3,24)( 4,25)( 5,26)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6 ]
gap> Read("REX.g");
gap> Read("REX.g");
gap> REXDemo(8);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 4 ]
args[3] = 4
args[4] = S3
uacalc file: ./REX-S3-0-3-M4.ua
axes = [ 1, 4 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
B1 = [ 1, 7, 8, 9, 10, 11 ]
B2 = [ 12, 13, 14, 4, 15, 16 ]
B3 = [ 1, 17, 18, 19, 20, 21 ]
B4 = [ 22, 23, 24, 4, 25, 26 ]
B5 = [ 1, 27, 28, 29, 30, 31 ]
B6 = [ 32, 33, 34, 4, 35, 36 ]
B7 = [ 1, 37, 38, 39, 40, 41 ]
B8 = [ 42, 43, 44, 4, 45, 46 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 3,14)( 5,15)( 6,16)
p0[3] = ( 2,17)( 3,18)( 4,19)( 5,20)( 6,21)
p0[4] = ( 1,22)( 2,23)( 3,24)( 5,25)( 6,26)
p0[5] = ( 2,27)( 3,28)( 4,29)( 5,30)( 6,31)
p0[6] = ( 1,32)( 2,33)( 3,34)( 5,35)( 6,36)
p0[7] = ( 2,37)( 3,38)( 4,39)( 5,40)( 6,41)
p0[8] = ( 1,42)( 2,43)( 3,44)( 5,45)( 6,46)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
  34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 ]
s[2] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 27, 28, 29, 30, 31, 32, 33, 34, 
  35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 ]
s[3] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 1, 1, 1, 1, 4, 4, 4, 
  4, 4, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 ]
s[4] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
  33, 34, 35, 36, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4 ]
gap> Read("REX.g");
gap> REXDemo(8);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
REX called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ 1, 4 ]
args[3] = 3
args[4] = S3
uacalc file: ./REX-S3-0-3-M3.ua
axes = [ 1, 4 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
B1 = [ 1, 7, 8, 9, 10, 11 ]
B2 = [ 12, 13, 14, 4, 15, 16 ]
B3 = [ 1, 17, 18, 19, 20, 21 ]
B4 = [ 22, 23, 24, 4, 25, 26 ]
B5 = [ 1, 27, 28, 29, 30, 31 ]
B6 = [ 32, 33, 34, 4, 35, 36 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 3,14)( 5,15)( 6,16)
p0[3] = ( 2,17)( 3,18)( 4,19)( 5,20)( 6,21)
p0[4] = ( 1,22)( 2,23)( 3,24)( 5,25)( 6,26)
p0[5] = ( 2,27)( 3,28)( 4,29)( 5,30)( 6,31)
p0[6] = ( 1,32)( 2,33)( 3,34)( 5,35)( 6,36)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
  34, 35, 36 ]
s[2] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 27, 28, 29, 30, 31, 32, 33, 34, 
  35, 36 ]
s[3] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 1, 1, 1, 1, 4, 4, 4, 
  4, 4 ]
gap> Read("TIKI3.g");
gap> TIKI3Demo(1);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
TIKI called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ [ 1, 3 ] ]
args[3] = S3
uacalc file: /tmp/REX/TIKI3_S3_0-2__.ua
Error, no method found! For debugging hints type ?Recovery from NoMethodFound
Error, no 1st choice method found for `SetPrintFormattingStatus' on 2 arguments called from
SetPrintFormattingStatus( uacalcfile, false ); called from
TIKI3( [ G, Gens, name ] ); called from
<function>( <arguments> ) called from read-eval-loop
Entering break read-eval-print loop ...
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk> quit;
gap> Read("TIKI3.g");
gap> TIKI3Demo(1);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
TIKI called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ [ 1, 3 ] ]
args[3] = S3
uacalc file: ./TIKI3_S3_0-2__.ua
apts = [ 1 ]
bpts = [ 3 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
BB[1]= [ 1, 7, 8, 9, 10, 11 ]
BB[2]= [ 12, 13, 3, 14, 15, 16 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 4,14)( 5,15)( 6,16)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3 ]
gap> TIKI3Demo(2);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
TIKI called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ [ 1, 3 ], [ 4, 6 ] ]
args[3] = S3
uacalc file: ./TIKI3_S3_0-2__3-5.ua
apts = [ 1, 4 ]
bpts = [ 3, 6 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
BB[1]= [ 1, 7, 8, 4, 9, 10 ]
BB[2]= [ 11, 12, 3, 13, 14, 6 ]
p0[1] = ( 2, 7)( 3, 8)( 5, 9)( 6,10)
p0[2] = ( 1,11)( 2,12)( 4,13)( 5,14)
s[1] = [ 1, 2, 3, 1, 5, 3, 1, 1, 1, 1, 3, 3, 3, 3 ]
s[2] = [ 4, 2, 6, 4, 5, 6, 4, 4, 4, 4, 6, 6, 6, 6 ]
gap> TIKI3Demo(3);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
TIKI called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ [ 1, 4 ] ]
args[3] = S3
uacalc file: ./TIKI3_S3_0-3__.ua
apts = [ 1 ]
bpts = [ 4 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
BB[1]= [ 1, 7, 8, 9, 10, 11 ]
BB[2]= [ 12, 13, 14, 4, 15, 16 ]
p0[1] = ( 2, 7)( 3, 8)( 4, 9)( 5,10)( 6,11)
p0[2] = ( 1,12)( 2,13)( 3,14)( 5,15)( 6,16)
s[1] = [ 1, 2, 3, 4, 5, 6, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4 ]
gap> TIKI3Demo(4);

 The congruences of the group, S3, are:
[ [ 1, 2, 3 ], [ 4, 5, 6 ] ]
[ [ 1, 4 ], [ 3, 6 ], [ 2, 5 ] ]
[ [ 1, 5 ], [ 3, 4 ], [ 2, 6 ] ]
[ [ 1, 6 ], [ 3, 5 ], [ 2, 4 ] ]
TIKI called with the following arguments: 
args[1] = Group( [ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ] )
args[2] = [ [ 1, 4 ], [ 3, 6 ] ]
args[3] = S3
uacalc file: ./TIKI3_S3_0-3__2-5.ua
apts = [ 1, 3 ]
bpts = [ 4, 6 ]
B0 = [ 1, 2, 3, 4, 5, 6 ]
BB[1]= [ 1, 7, 3, 8, 9, 10 ]
BB[2]= [ 11, 12, 13, 4, 14, 6 ]
p0[1] = ( 2, 7)( 4, 8)( 5, 9)( 6,10)
p0[2] = ( 1,11)( 2,12)( 3,13)( 5,14)
s[1] = [ 1, 2, 1, 4, 5, 4, 1, 1, 1, 1, 4, 4, 4, 4 ]
s[2] = [ 3, 2, 3, 6, 5, 6, 3, 3, 3, 3, 6, 6, 6, 6 ]
gap> TIKI3Demo(5);

 The congruences of the group, C2 x A4, are:
[ [ 1, 2 ], [ 5, 6 ], [ 9, 10 ], [ 3, 4 ], [ 7, 8 ], [ 11, 12 ] ]
[ [ 1, 2, 3, 4 ], [ 5, 6, 7, 8 ], [ 9, 10, 11, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3 ], [ 2, 4 ], [ 6, 7 ], [ 5, 8 ], [ 9, 12 ], [ 10, 11 ] ]
[ [ 1, 4 ], [ 2, 3 ], [ 6, 8 ], [ 5, 7 ], [ 9, 11 ], [ 10, 12 ] ]
TIKI called with the following arguments: 
args[1] = Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 1, 6, 9)( 2, 5,10)( 3, 7,12)( 4, 8,11), ( 1, 4)( 2, 3)( 5, 7)( 6, 8)( 9,11)
    (10,12) ] )
args[2] = [ [ 1, 4 ], [ 9, 12 ] ]
args[3] = C2xA4
uacalc file: ./TIKI3_C2xA4_0-3__8-11.ua
apts = [ 1, 9 ]
bpts = [ 4, 12 ]
B0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
BB[1]= [ 1, 13, 14, 15, 16, 17, 18, 19, 9, 20, 21, 22 ]
BB[2]= [ 23, 24, 25, 4, 26, 27, 28, 29, 30, 31, 32, 12 ]
p0[1] = ( 2,13)( 3,14)( 4,15)( 5,16)( 6,17)( 7,18)( 8,19)(10,20)(11,21)(12,22)
p0[2] = ( 1,23)( 2,24)( 3,25)( 5,26)( 6,27)( 7,28)( 8,29)( 9,30)(10,31)(11,32)
s[1] = [ 1, 2, 3, 4, 5, 6, 7, 8, 1, 10, 11, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 ]
s[2] = [ 9, 2, 3, 12, 5, 6, 7, 8, 9, 10, 11, 12, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12 ]
gap> TIKI3Demo(6);

 The congruences of the group, C2 x A4, are:
[ [ 1, 2 ], [ 5, 6 ], [ 9, 10 ], [ 3, 4 ], [ 7, 8 ], [ 11, 12 ] ]
[ [ 1, 2, 3, 4 ], [ 5, 6, 7, 8 ], [ 9, 10, 11, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3 ], [ 2, 4 ], [ 6, 7 ], [ 5, 8 ], [ 9, 12 ], [ 10, 11 ] ]
[ [ 1, 4 ], [ 2, 3 ], [ 6, 8 ], [ 5, 7 ], [ 9, 11 ], [ 10, 12 ] ]
TIKI called with the following arguments: 
args[1] = Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 1, 6, 9)( 2, 5,10)( 3, 7,12)( 4, 8,11), ( 1, 4)( 2, 3)( 5, 7)( 6, 8)( 9,11)
    (10,12) ] )
args[2] = [ [ 1, 5 ] ]
args[3] = C2xA4
uacalc file: ./TIKI3_C2xA4_0-4__.ua
apts = [ 1 ]
bpts = [ 5 ]
B0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
BB[1]= [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
BB[2]= [ 24, 25, 26, 27, 5, 28, 29, 30, 31, 32, 33, 34 ]
p0[1] = ( 2,13)( 3,14)( 4,15)( 5,16)( 6,17)( 7,18)( 8,19)( 9,20)(10,21)(11,22)(12,23)
p0[2] = ( 1,24)( 2,25)( 3,26)( 4,27)( 6,28)( 7,29)( 8,30)( 9,31)(10,32)(11,33)(12,34)
s[1] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 ]
gap> G:=TransitiveGroup(12,2);
E(4)[x]C(3)=6x2
gap> for b in AllBlocks(G) do Print(Orbit(G,b,OnSets), "\n"); od;
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
gap> Read("OverAlgebras.g");
gap> OverAlgebra2Demo(7);

 The congruences of the group, C6 x C2, are:
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]
OverAlgebra2 called with the following arguments: 
args[1] = E(4)[x]C(3)=6x2
args[2] = [ [ 1, 11 ] ]
args[3] = C6xC2

uacalc file: /tmp/OverAlgebra2s/OverAlgebra2_C6xC2_0-10.ua
Error, no method found! For debugging hints type ?Recovery from NoMethodFound
Error, no 1st choice method found for `SetPrintFormattingStatus' on 2 arguments called from
SetPrintFormattingStatus( uacalcfile, false ); called from
OverAlgebra2( [ G, Gens, name ] ); called from
<function>( <arguments> ) called from read-eval-loop
Entering break read-eval-print loop ...
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk> quit;
gap> Read("OverAlgebras.g");
gap> OverAlgebra2Demo(7);

 The congruences of the group, C6 x C2, are:
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]
OverAlgebra2 called with the following arguments: 
args[1] = E(4)[x]C(3)=6x2
args[2] = [ [ 1, 11 ] ]
args[3] = C6xC2

uacalc file: ./OverAlgebra2_C6xC2_0-10.ua

--- CONGRUENCES of (B,G) --- 
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]

tie-points: a=[ 1 ];  b=[ 11 ];

--- MINIMAL SETS --- 
B0    = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
BB[1] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
BB[2] = [ 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 ]

The size of A is 34. This should equal BB[K+1][N]=BB[2][12]=34

--- OPERATIONS ---

r = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 
  22 ]

------ pi's --------
p0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
p[1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 22, 22, 22, 22, 22, 22, 22, 22, 22, 
  22, 22 ]
p[2] = [ 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 24, 25, 26, 27, 28, 29, 
  30, 31, 32, 33, 34 ]

------ qij's --------
q[1][1] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
q[1][2] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
  22, 23 ]
q[2][1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11 ]
q[2][2] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 22, 22, 22, 22, 22, 22, 22, 22, 22, 
  22, 22 ]

------ gip0's --------
g1p0 = [ 10, 5, 12, 7, 2, 9, 4, 11, 6, 1, 8, 3, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 12, 7, 2, 9, 4, 11, 6, 1, 8, 3 ]
g2p0 = [ 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6 ]
g3p0 = [ 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 ]
gap> Read("OverAlgebras.g");
gap> OverAlgebra2Demo(7);

 The congruences of the group, C6 x C2, are:
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]
OverAlgebra2 called with the following arguments: 
args[1] = E(4)[x]C(3)=6x2
args[2] = [ [ 1, 7 ] ]
args[3] = C6xC2

uacalc file: ./OverAlgebra2_C6xC2_0-6.ua

--- CONGRUENCES of (B,G) --- 
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]

tie-points: a=[ 1 ];  b=[ 7 ];

--- MINIMAL SETS --- 
B0    = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
BB[1] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
BB[2] = [ 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 ]

The size of A is 34. This should equal BB[K+1][N]=BB[2][12]=34

--- OPERATIONS ---

r = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 
  18 ]

------ pi's --------
p0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
p[1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 18, 18, 18, 18, 18, 18, 18, 18, 18, 
  18, 18 ]
p[2] = [ 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 24, 25, 26, 27, 28, 29, 
  30, 31, 32, 33, 34 ]

------ qij's --------
q[1][1] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
q[1][2] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
  22, 23 ]
q[2][1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7 ]
q[2][2] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 18, 18, 18, 18, 18, 18, 18, 18, 18, 
  18, 18 ]

------ gip0's --------
g1p0 = [ 10, 5, 12, 7, 2, 9, 4, 11, 6, 1, 8, 3, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 12, 7, 2, 9, 4, 11, 6, 1, 8, 3 ]
g2p0 = [ 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6 ]
g3p0 = [ 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 ]
gap> Read("OverAlgebras.g");
Syntax error: ] expected in OverAlgebras.g line 752
        Gens:= [[1,10][3,9]];
                      ^
gap> Read("OverAlgebras.g");
gap> OverAlgebra2Demo(7);

 The congruences of the group, C6 x C2, are:
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]
OverAlgebra2 called with the following arguments: 
args[1] = E(4)[x]C(3)=6x2
args[2] = [ [ 1, 10 ], [ 3, 9 ] ]
args[3] = C6xC2

uacalc file: ./OverAlgebra2_C6xC2_0-9_2-8.ua

--- CONGRUENCES of (B,G) --- 
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]

tie-points: a=[ 1, 3 ];  b=[ 10, 9 ];

--- MINIMAL SETS --- 
B0    = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
BB[1] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
BB[2] = [ 24, 25, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34 ]
BB[3] = [ 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 ]

The size of A is 45. This should equal BB[K+1][N]=BB[3][12]=45

--- OPERATIONS ---

r = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
  34, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31 ]

------ pi's --------
p0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 
  7, 8, 9, 10, 11, 12 ]
p[1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
  21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21 ]
p[2] = [ 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 25, 26, 27, 28, 29, 
  30, 31, 32, 33, 34, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31 ]
p[3] = [ 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 
  31, 31, 31, 31, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 ]

------ qij's --------
q[1][1] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 
  5, 6, 7, 8, 9, 10, 11, 12 ]
q[1][2] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
  13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
q[1][3] = [ 24, 25, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 
  24, 24, 24, 24, 24, 25, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34 ]
q[2][1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
  10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 ]
q[2][2] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
  21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21 ]
q[2][3] = [ 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 32, 32, 32, 32, 32, 32, 
  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32 ]
q[3][1] = [ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 9, 9, 9, 
  9, 9, 9, 9, 9, 9, 9, 9 ]
q[3][2] = [ 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 1, 13, 15, 16, 17, 18, 
  19, 20, 21, 22, 23, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20 ]
q[3][3] = [ 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 24, 25, 26, 27, 28, 29, 
  30, 31, 32, 33, 34, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31 ]

------ gip0's --------
g1p0 = [ 10, 5, 12, 7, 2, 9, 4, 11, 6, 1, 8, 3, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
  10, 10, 5, 12, 7, 2, 9, 4, 11, 6, 1, 8, 3 ]
g2p0 = [ 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 10, 11, 
  12, 1, 2, 3, 4, 5, 6 ]
g3p0 = [ 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 
  10, 11, 12, 1, 2, 3, 4 ]
gap> OverAlgebra2Demo(2);

 The congruences of the group, C2 x A4, are:
[ [ 1, 2 ], [ 5, 6 ], [ 9, 10 ], [ 3, 4 ], [ 7, 8 ], [ 11, 12 ] ]
[ [ 1, 2, 3, 4 ], [ 5, 6, 7, 8 ], [ 9, 10, 11, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3 ], [ 2, 4 ], [ 6, 7 ], [ 5, 8 ], [ 9, 12 ], [ 10, 11 ] ]
[ [ 1, 4 ], [ 2, 3 ], [ 6, 8 ], [ 5, 7 ], [ 9, 11 ], [ 10, 12 ] ]
OverAlgebra2 called with the following arguments: 
args[1] = Group( [ ( 5, 6)( 7, 8)( 9,10)(11,12), ( 1, 6, 9)( 2, 5,10)( 3, 7,12)( 4, 8,11), ( 1, 4)( 2, 3)( 5, 7)( 6, 8)( 9,11)
    (10,12) ] )
args[2] = [ [ 1, 2 ], [ 9, 12 ] ]
args[3] = C2xA4

uacalc file: ./OverAlgebra2_C2xA4_0-1_8-11.ua

--- CONGRUENCES of (B,G) --- 
[ [ 1, 2 ], [ 5, 6 ], [ 9, 10 ], [ 3, 4 ], [ 7, 8 ], [ 11, 12 ] ]
[ [ 1, 2, 3, 4 ], [ 5, 6, 7, 8 ], [ 9, 10, 11, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3 ], [ 2, 4 ], [ 6, 7 ], [ 5, 8 ], [ 9, 12 ], [ 10, 11 ] ]
[ [ 1, 4 ], [ 2, 3 ], [ 6, 8 ], [ 5, 7 ], [ 9, 11 ], [ 10, 12 ] ]

tie-points: a=[ 1, 9 ];  b=[ 2, 12 ];

--- MINIMAL SETS --- 
B0    = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
BB[1] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
BB[2] = [ 24, 25, 26, 27, 28, 29, 30, 31, 13, 32, 33, 34 ]
BB[3] = [ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 ]

The size of A is 45. This should equal BB[K+1][N]=BB[3][12]=45

--- OPERATIONS ---

r = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
  34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34 ]

------ pi's --------
p0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 
  7, 8, 9, 10, 11, 12 ]
p[1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 13, 13, 13, 13, 13, 13, 13, 13, 13, 
  13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13 ]
p[2] = [ 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 24, 25, 26, 27, 28, 29, 
  30, 31, 32, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34 ]
p[3] = [ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 
  34, 34, 34, 34, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 ]

------ qij's --------
q[1][1] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 
  5, 6, 7, 8, 9, 10, 11, 12 ]
q[1][2] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
  13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
q[1][3] = [ 24, 25, 26, 27, 28, 29, 30, 31, 13, 32, 33, 34, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 
  24, 24, 24, 24, 24, 25, 26, 27, 28, 29, 30, 31, 13, 32, 33, 34 ]
q[2][1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
  2, 2, 2, 2, 2, 2, 2, 2 ]
q[2][2] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 13, 13, 13, 13, 13, 13, 13, 13, 13, 
  13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13 ]
q[2][3] = [ 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 26, 27, 28, 29, 30, 31, 13, 32, 33, 34, 25, 25, 25, 25, 25, 25, 
  25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25 ]
q[3][1] = [ 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 12, 12, 
  12, 12, 12, 12, 12, 12, 12, 12, 12 ]
q[3][2] = [ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 1, 13, 14, 15, 16, 17, 
  18, 19, 21, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23 ]
q[3][3] = [ 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 24, 25, 26, 27, 28, 29, 
  30, 31, 32, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34 ]

------ gip0's --------
g1p0 = [ 1, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 6, 
  5, 8, 7, 10, 9, 12, 11 ]
g2p0 = [ 6, 5, 7, 8, 10, 9, 12, 11, 1, 2, 4, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 7, 8, 10, 
  9, 12, 11, 1, 2, 4, 3 ]
g3p0 = [ 4, 3, 2, 1, 7, 8, 5, 6, 11, 12, 9, 10, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 2, 1, 7, 
  8, 5, 6, 11, 12, 9, 10 ]
gap> Read("OverAlgebras.g");
gap> OverAlgebra2Demo(7);

 The congruences of the group, C6 x C2, are:
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]
OverAlgebra2 called with the following arguments: 
args[1] = E(4)[x]C(3)=6x2
args[2] = [ [ 1, 9 ] ]
args[3] = C6xC2

uacalc file: ./OverAlgebra2_C6xC2_0-8.ua

--- CONGRUENCES of (B,G) --- 
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3, 5, 7, 9, 11 ], [ 2, 4, 6, 8, 10, 12 ] ]
[ [ 1, 4 ], [ 7, 10 ], [ 5, 8 ], [ 2, 11 ], [ 9, 12 ], [ 3, 6 ] ]
[ [ 1, 4, 5, 8, 9, 12 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 1, 4, 7, 10 ], [ 2, 5, 8, 11 ], [ 3, 6, 9, 12 ] ]
[ [ 1, 5, 9 ], [ 2, 6, 10 ], [ 3, 7, 11 ], [ 4, 8, 12 ] ]
[ [ 1, 7 ], [ 4, 10 ], [ 5, 11 ], [ 2, 8 ], [ 3, 9 ], [ 6, 12 ] ]
[ [ 1, 10 ], [ 4, 7 ], [ 2, 5 ], [ 8, 11 ], [ 6, 9 ], [ 3, 12 ] ]

tie-points: a=[ 1 ];  b=[ 9 ];

--- MINIMAL SETS --- 
B0    = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
BB[1] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ]
BB[2] = [ 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 ]

The size of A is 34. This should equal BB[K+1][N]=BB[2][12]=34

--- OPERATIONS ---

r = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
  20 ]

------ pi's --------
p0 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
p[1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
  20, 20 ]
p[2] = [ 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 24, 25, 26, 27, 28, 29, 
  30, 31, 32, 33, 34 ]

------ qij's --------
q[1][1] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
q[1][2] = [ 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
  22, 23 ]
q[2][1] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 ]
q[2][2] = [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 20, 20, 20, 20, 20, 20, 20, 20, 20, 
  20, 20 ]

------ gip0's --------
g1p0 = [ 10, 5, 12, 7, 2, 9, 4, 11, 6, 1, 8, 3, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 5, 12, 7, 2, 9, 4, 11, 6, 1, 8, 3 ]
g2p0 = [ 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6 ]
g3p0 = [ 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 ]
gap>    G:=Group([(9,10)(11,12)(5,6)(7,8), (3,7,12)(9,1,6)(11,4,8)(5,10,2), (3,2)(9,11)(5,7)(1,4)(10,12)(6,8)]);
Group([ (5,6)(7,8)(9,10)(11,12), (1,6,9)(2,5,10)(3,7,12)(4,8,11), (1,4)(2,3)(5,7)(6,8)(9,11)(10,12) ])
gap>         Print("\n The congruences of the group, ", StructureDescription(G), ", are:\n");

 The congruences of the group, C2 x A4, are:
gap>         for b in AllBlocks(G) do Print(Orbit(G,b,OnSets), "\n"); od;
[ [ 1, 2 ], [ 5, 6 ], [ 9, 10 ], [ 3, 4 ], [ 7, 8 ], [ 11, 12 ] ]
[ [ 1, 2, 3, 4 ], [ 5, 6, 7, 8 ], [ 9, 10, 11, 12 ] ]
[ [ 1, 2, 5, 6, 9, 10 ], [ 3, 4, 7, 8, 11, 12 ] ]
[ [ 1, 3 ], [ 2, 4 ], [ 6, 7 ], [ 5, 8 ], [ 9, 12 ], [ 10, 11 ] ]
[ [ 1, 4 ], [ 2, 3 ], [ 6, 8 ], [ 5, 7 ], [ 9, 11 ], [ 10, 12 ] ]
gap>         for b in AllBlocks(G) do Print(Orbit(G,b,OnSets)-1, "\n"); od;
[ [ 0, 1 ], [ 4, 5 ], [ 8, 9 ], [ 2, 3 ], [ 6, 7 ], [ 10, 11 ] ]
[ [ 0, 1, 2, 3 ], [ 4, 5, 6, 7 ], [ 8, 9, 10, 11 ] ]
[ [ 0, 1, 4, 5, 8, 9 ], [ 2, 3, 6, 7, 10, 11 ] ]
[ [ 0, 2 ], [ 1, 3 ], [ 5, 6 ], [ 4, 7 ], [ 8, 11 ], [ 9, 10 ] ]
[ [ 0, 3 ], [ 1, 2 ], [ 5, 7 ], [ 4, 6 ], [ 8, 10 ], [ 9, 11 ] ]
gap>       G:=Group([(1,2), (1,2,3)]);
Group([ (1,2), (1,2,3) ])
gap>         G:=Action(G,G, OnRight);
Group([ (1,5)(2,4)(3,6), (1,2,3)(4,5,6) ])
gap>         name:="S3action";
"S3action"
gap>         Print("\n The congruences of the group, ", StructureDescription(G), ", are:\n");

 The congruences of the group, S3, are:
gap>         for b in AllBlocks(G) do Print(Orbit(G,b,OnSets)-1, "\n"); od;
[ [ 0, 1, 2 ], [ 3, 4, 5 ] ]
[ [ 0, 3 ], [ 2, 5 ], [ 1, 4 ] ]
[ [ 0, 4 ], [ 2, 3 ], [ 1, 5 ] ]
[ [ 0, 5 ], [ 2, 4 ], [ 1, 3 ] ]
gap> quit;
